<style lang='less' scoped>
.btn {
  width: 80%;
  padding: 20rpx 0;
  border-radius: 10rpx;
  text-align: center;
  margin: 40rpx 10%;
  background: #000;
  color: #fff;
}

/*mask*/
.drawer_screen {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  background: rgba(0, 0, 0, 0.5);
  overflow: hidden;
}

/*content*/
.drawer_box {
  width: 650rpx;
  overflow: hidden;
  position: fixed;
  top: 50%;
  left: 0;
  z-index: 1001;
  background: #fafafa;
  margin: -300rpx 50rpx 0 50rpx;
  border-radius: 6rpx;
}
.drawer_title {
  padding: 30rpx;
  font: 40rpx 'microsoft yahei';
  text-align: center;
}
.drawer_content {
  max-height: 420rpx;
  overflow-y: scroll; /*超出父盒子高度可滚动*/
  padding: 20rpx;
  .item {
    &:nth-child(2) {
      margin-top: 40rpx;
    }
    &:nth-child(n + 3) {
      margin-top: 10rpx;
    }
  }
}
.title {
  height: 60rpx;
  line-height: 60rpx;
  width: 160rpx;
  text-align: center;
  display: inline-block;
  font: 300 28rpx/30px 'microsoft yahei';
}
.button-div {
  display: flex;
  margin-top: 50rpx;
  > view {
    flex: 5;
    padding: 10px;
    font: 20px 'microsoft yahei';
    text-align: center;
    border-top: 1px solid #e8e8ea;
  }
  .btn_no {
    border-right: 1px solid #e8e8ea;
  }
  .btn_yes {
    color: #3cc51f;
  }
}
</style>
<template>
  <!--使用animation属性指定需要执行的动画-->
  <view wx:if="{{showModalStatus}}" class="drawer_screen">
    <view animation="{{animationData}}" class="drawer_box">
      <!-- <view class="drawer_screen"> -->
      <!--drawer content-->
      <view class="drawer_title">{{modalData.title || '系统提示'}}</view>
      <view class="drawer_content">
        <view wx:for="{{modalData.content}}" wx:key="index" class="item">{{item}}</view>
        <slot name="test"></slot>
      </view>
      <view class="button-div">
        <view
          wx:for="{{modalData.button}}"
          wx:key="index"
          bind
          wx:if="{{index <= 1}}"
          class="{{index == 0 ? 'btn_no' : 'btn_yes'}}"
          @tap="changeStatus(index == 0 ? 'no' : 'yes')"
        >{{item}}</view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from '@wepy/core';
wepy.component({ 
  options: {
    multipleSlots: true // 在组件定义时的选项中启用多slot支持
  },
  props: {
    showModalStatus: {
      type: Boolean,
      default: false,
      twoWay: true
    },
    currentStatu: {
      type: String,
      default: 'no',
      twoWay: true
    },
    modalData: {
      type: Object,
      default: {
        title: '系统提示',
        content: [],
        button: ['取消', '确定']
      },
      twoWay: true
    }
  },
  data: {
    animation: new Object(),
    animationData: new Object()
  },
  methods: {
    changeStatus(status) {
      // console.log(status);
      let that = this;
      // that.showModalStatus = false;
      that.currentStatu = status;
      this.$emit('changeModal', false)
      // that.$apply();
      // that.animate();
    },
    animate() {
      let that = this;
      let animation = wx.createAnimation({
        duration: 200, //动画时长
        timingFunction: 'linear', //线性
        delay: 0 //0则不延迟
      });

      // 第2步：这个动画实例赋给当前的动画实例
      that.animation = animation;

      // that.$apply();

      // 第3步：执行第一组动画
      animation
        .opacity(0)
        .rotateX(-100)
        .step();

      // 第4步：导出动画对象赋给数据对象储存
      that.animationData = animation.export();

      // 第5步：设置定时器到指定时候后，执行第二组动画
      setTimeout(function() {
        // 执行第二组动画
        animation
          .opacity(1)
          .rotateX(0)
          .step();
        // 给数据对象储存的第一组动画，更替为执行完第二组动画的动画对象
        that.animationData = animation;
        // that.$apply();
      }, 200);
    }
  },

  watch: {
    showModalStatus(val) {
      let that = this;
      // that.animate();
      console.log(val);
      
    }
  }
});
</script>