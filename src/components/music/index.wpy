<style lang='less' scoped>
@import url('~@/assets/styles/iconfont/iconfont.less');
.animationFrozen,
.animationSlow {
  position: fixed;
  right: 10rpx;
  top: 6rpx;
  z-index: 99;
  width: 100rpx;
  height: 100rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
.animationSlow {
  animation-name: myfirst; /*动画的名称 */
  animation-duration: 2000ms; /*动画从开始到结束的时间*/
  animation-timing-function: linear; /*动画执行快慢的参数*/
  animation-iteration-count: infinite; /*动画执行多少次的参数*/ /*以下是兼容ios所需，参数意义与上相同*/
  -webkit-animation-name: myfirst;
  -webkit-animation-duration: 2000ms;
  -webkit-animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
}
@keyframes myfirst {
  /*开始转的角度*/
  from {
    transform: rotate(0deg);
  } /*结束的角度*/
  to {
    transform: rotate(360deg);
  }
}
/*兼容ios*/
@-webkit-keyframes myfirst {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.yy-mplay {
  color: rgba(0, 0, 0, 0.65);
  font-size: 58rpx;
}
</style>
<template>
  <div class="">
    <!-- <div class="animationSlow" style="animation-duration:{{duration}}ms;-webkit-animation-duration:{{duration}}ms;animation-play-state:{{status}};-webkit-animation-play-state:{{status}};" @tap="playMusic"> -->
    <div v-if="run" class="animationSlow" @tap="playMusic">
      <i class="icon yy-mplay"></i>
    </div>
    <div v-else class="animationFrozen" @tap="playMusic">
      <i class="icon yy-mplay"></i>
    </div>
  </div>
</template>
<script>
import wepy from '@wepy/core'
// const app = getApp()
const bgAudioManager = wx.getBackgroundAudioManager()
const { MusicManager } = require('./NetEaseCloudMusicApi/src/MusicManager')

wepy.component({
  options: {
    multipleSlots: true // 在组件定义时的选项中启用多slot支持
  },
  props: {},
  data: {
    status: '', // paused|running;
    duration: 0,
    run: false
  },
  computed: {},
  created() {
    // this.test()
    this.getMusicById(524148423)
    // if (app.globalData.userInfo) {
    //   this.setData({
    //     userInfo: app.globalData.userInfo,
    //     hasUserInfo: true
    //   })
    // } else if (this.data.canIUse) {
    //   // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
    //   // 所以此处加入 callback 以防止这种情况
    //   app.userInfoReadyCallback = res => {
    //     this.setData({
    //       userInfo: res.userInfo,
    //       hasUserInfo: true
    //     })
    //   }
    // } else {
    //   // 在没有 open-type=getUserInfo 版本的兼容处理
    //   wx.getUserInfo({
    //     success: res => {
    //       app.globalData.userInfo = res.userInfo
    //       this.setData({
    //         userInfo: res.userInfo,
    //         hasUserInfo: true
    //       })
    //     }
    //   })
    // }
  },
  methods: {
    async test() {
      // 搜索歌曲
      let musicSearchHelper = MusicManager.getMusicSearchHelper({
        keyword: 'Abandon',
        limit: 10
      })
      console.log(`现在是第${musicSearchHelper.getCurrentPage()}页`)
      console.log(await musicSearchHelper.getSearchResult())
      musicSearchHelper.nextPage()
      console.log(`现在是第${musicSearchHelper.getCurrentPage()}页`)
      console.log(await musicSearchHelper.getSearchResult())
      musicSearchHelper.previousPage()
      console.log(`现在是第${musicSearchHelper.getCurrentPage()}页`)
      console.log(await musicSearchHelper.getSearchResult())
      console.log(musicSearchHelper)

      // 获取歌曲url
      let songs = await musicSearchHelper.getSearchResult()
      if (songs.length != 0) {
        let musicId = songs[0].id
        this.getMusicById(musicId)
      } else {
        console.log('没有查找到音乐')
      }

      // 搜索用户
      // let userSearchHelper = MusicManager.getUserSearchHelper({
      //   userName: 'JabinGP',
      //   limit: 20
      // })
      // let users = await userSearchHelper.getSearchResult()
      // console.log(users)

      // 获取用户歌单
      // let userListHelper = MusicManager.getUserListHelper(users[0].userId)
      // let iLikeList = await userListHelper.getILikeList()
      // console.log(iLikeList)

      // 获取我喜欢歌单
      // let userListDeatilHelper = MusicManager.getUserListDetailHelper(
      //   iLikeList.id
      // )
      // let listDetail = await userListDeatilHelper.getDeatil()
      // console.log(listDetail)
      // let timer = 0
      // for(let song of listDetail.tracks){
      //   let musicUrlHelper = MusicManager.getMusicUrlHelper(song.id);
      //   console.log(`歌曲的ID是：${musicUrlHelper.musicId}`);
      //   let url2 = await musicUrlHelper.getUrlResult();
      //   console.log(`歌曲的url链接是：${url2}`);
      //   if(timer++>20)break;
      // }
    },
    async getMusicById(id) {
      let musicUrlHelper = MusicManager.getMusicUrlHelper(id)
      // console.log(`歌曲的ID是：${id}`)
      let url = await musicUrlHelper.getUrlResult()
      console.log(`歌曲的url链接是：${url}`)
      this.$app.$options.globalData.bgm = url
    },
    // openMusic: function() {},
    playMusic() {
      const isMusicPlay = this.$app.$options.globalData.isMusicPlay
      const player = this.$app.$options.globalData.player
      this.$app.$options.globalData.isMusicPlay = !isMusicPlay
      if (this.$app.$options.globalData.isMusicPlay) {
        console.log('播放')
        // this.runForIOS(2000)
        this.run = true
        player.title = 'bgm'
        player.src = this.$app.$options.globalData.bgm
        player.play()
      } else {
        console.log('停止')
        // this.runForIOS(0)
        this.run = false
        player.stop()
      }
    },
    // runForIOS(time) {
    //   this.status = 'paused'
    //   this.duration = time
    //   if (time === 0) {
    //     return
    //   }
    //   setTimeout(() => {
    //     this.status = 'running'
    //   }, 10)
    // }
  },
  mixins: []
})
</script>