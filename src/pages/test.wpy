
<wxs module="m1" lang="babel" src="../utils/widget/test.wxs"></wxs>
<template>
  <div class="container">
    <div class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <div class="userinfo-nickname">{{ userInfo.nickName }}</div>
    </div>
    <div @tap="openModal">展开自定义modal{{modalTest}}</div>
    <modal :showModalStatus="modalTest" @changeModal="changeModal" title="">
      <div slot="test">插槽测试</div>
    </modal>

    <Panel @tap="testEdit">
      <my-swiper :imgUrls="imgUrls"/>  
    </Panel>

    <panel>
      <div class="title" slot="title">测试数据绑定</div>
      <text class="info" @tap="currentTime = +new Date()">{{m1.getTime(currentTime)}}</text>
      <text class="info">{{setTimeoutTitle}}</text>
      <div class="info" @tap="mixintap">{{mixin}}</div>
      <text class="info">{{testcomputed}}</text>
      <text class="info">{{counter}}</text>
    </panel>
    
    <panel>
      <div class="title" slot="title">其它测试</div>
      <!--button @tap="toast" size="mini">第三方组件</button-->
      <button @tap="communicate" size="mini">组件通信</button>
      <button @tap="tap" size="mini">混合TAP事件</button>
    </panel>
    <panel>
      <div class="title" slot="title">测试并发网络请求</div>
      <div>返回结果:
        <text>{{netrst}}</text>
      </div>
      <button @tap="request" size="mini">点我发起10个请求</button>
    </panel>
    <panel>
      <div class="title" slot="title">测试 v-model : {{inputmodel}}</div>
      <div style="display: flex; align-items: center;">
        <input v-model="inputmodel">
        <text style="margin-left: 30rpx;">Value: {{inputmodel}}</text>
      </div>
    </panel>
    <panel>
      <div class="title" slot="title">测试组件</div>
      <text class="testcounter">全局计数器：</text>
      <div class="counterview">
        <button @tap="mynum++" size="mini">全局计数器: {{mynum}}</button>
      </div>
      <text class="testcounter">计数组件1 - num:</text>
      <div class="counterview">
        <counter @index-emit.user="counterEmit"/>
      </div>
      <text class="testcounter">计数组件2 - num.sync:</text>
      <div class="counterview">
        <counter :num.sync="mynum"></counter>
      </div>
    </panel>
    <panel>
      <div class="title" slot="title">测试组件Repeat</div>
      <div v-for="(item, index) in groupList">
        <group :grouplist="item" :index="index"></group>
      </div>
    </panel>
    <panel>
      <div class="title" slot="title">测试列表</div>
      <list></list>
    </panel>
    <panel>
      <div class="title" slot="title">测试引用第三方原生组件</div>
      <slide-view class="slide" width="640" height="80" slideWidth="266">
        <view class="left" slot="left">这是一个原生组件，右滑试试看。</view>
        <view class="right" slot="right">
          <view class="right-item">删除</view>
        </view>
      </slide-view>
    </panel>
    <!--toast /-->
  </div>
</template>

<script>
import wepy from '@wepy/core';
import eventHub from '../utils/common/eventHub';
import { mapState } from '@wepy/x';
import store from '../store';
import testMixin from '../mixins/test';
import api from '../api'

wepy.page({
  store,
  config: {
    navigationBarTitleText: 'test'
  },

  hooks: {
    // Page 级别 hook, 只对当前 Page 的 setData 生效。
    'before-setData': function(dirty) {
      if (Math.random() < 0.2) {
        console.log('setData canceled');
        return false; // Cancel setData
      }
      dirty.time = +new Date();
      return dirty;
    }
  },

  mixins: [testMixin],

  data: {
    modalTest: false,
    inputmodel: 'v-model',
    mynum: 20,
    userInfo: {
      nickName: '加载中...'
    },
    currentTime: +new Date(),
    setTimeoutTitle: '标题三秒后会被修改',
    count: 0,
    netrst: '',
    groupList: [
      {
        id: 1,
        name: '点击改变',
        list: [
          {
            childid: '1.1',
            childname: '子项，点我改变'
          },
          {
            childid: '1.2',
            childname: '子项，点我改变'
          },
          {
            childid: '1.3',
            childname: '子项，点我改变'
          }
        ]
      },
      {
        id: 2,
        name: '点击改变',
        list: [
          {
            childid: '2.1',
            childname: '子项，点我改变'
          },
          {
            childid: '2.2',
            childname: '子项，点我改变'
          },
          {
            childid: '2.3',
            childname: '子项，点我改变'
          }
        ]
      },
      {
        id: 3,
        name: '点击改变',
        list: [
          {
            childid: '3.1',
            childname: '子项，点我改变'
          }
        ]
      }
    ],
    imgUrls: [
      "../../assets/images/q01.png",
      "../../assets/images/q02.png",
      "../../assets/images/q00.png"
    ],
  },

  created() {
    api.test().then((res) => {
      console.log(res);
      
    })

    let self = this;
    self.currentTime = +new Date();

    self.setTimeoutTitle = '标题三秒后会被修改';
    setTimeout(() => {
      self.setTimeoutTitle = '到三秒了';
    }, 3000);

    wx.getUserInfo({
      success(res) {
        self.userInfo = res.userInfo;
      }
    });
  },

  computed: {
    ...mapState(['counter']),
    testcomputed() {
      return 'computed - ' + this.mynum;
    }
  },

  methods: {
    testEdit() {
      wx.navigateTo({
        url: 'edit'  //跳转地址
      })
    },
    tap() {
      throw 'can not go here';
    },
    plus() {
      this.mynum++;
    },
    toast() {
      let promise = this.$invoke('toast', 'show', {
        title: '自定义标题',
        img:
          'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      });

      promise.then(d => {
        console.log('toast done');
      });
    },
    mixintap() {
      console.log('do noting from ' + this.$is);
    },
    communicate() {
      let counters = this.$children.filter(
        com => com.$is === 'components/counter'
      );

      // Get children counter
      counters[0].num++;
      counters[1].num--;

      eventHub.$emit('app-launch', { a: 1 }, { b: 2 });
    },
    request() {
      let self = this;
      let i = 10;
      let map = [        'MA==',
        'MQo=',
        'Mg==',
        'Mw==',
        'NA==',
        'NQ==',
        'Ng==',
        'Nw==',
        'OA==',
        'OQ=='
      ];
      while (i--) {
        wx.request({
          url:
            'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' +
            map[i] +
            '&i=' +
            i,
          success: function(d) {
            if (d.statusCode !== 200) {
              self.netrst += d.statusCode + '.';
            } else {
              self.netrst += d.data + '.';
            }
          }
        });
      }
    },
    counterEmit(num) {
      console.log(`${this.$is} receive event, the number is: ${num}`);
    },
    openModal() {
      this.modalTest = true;
    },
    changeModal(e) {
      setTimeout(() => {
        this.modalTest = e;
      }, 300);
    }
  },
  events: {},
});
</script>
<style lang="less">
input {
  border: 1rpx solid #ccc;
  display: inline-block;
  width: 200rpx;
  border-radius: 5rpx;
}
.info {
  padding-right: 10rpx;
}
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
}
.slide {
  width: 640rpx;
  display: flex;
  border: 1rpx solid #ccc;
  font-size: 28rpx;
  align-items: center;
  box-sizing: border-box;
  .left {
    width: 750rpx;
    padding: 20rpx;
  }
  .right {
    display: flex;
    .right-item {
      padding: 20rpx 30rpx;
      background-color: red;
      color: #fff;
    }
  }
}
// swiper部分
page{
  background-color: #fff;
}
.swiper-block {
  background: #fff;
  height: 500rpx;
  width: 100%;
}

.swiper-item{
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: flex-start;
  overflow: unset;
  width: 550rpx;
  padding-top: 70rpx;
  padding-bottom: 20rpx;
  box-sizing: border-box;
}

/* .swiper-block .wx-swiper-dot::before{
  content:' ';
  flex-grow: 1;
  background: rgb(255, 255, 255,0.8);
}

.swiper-block .wx-swiper-dot::after{
  content:' ';
  flex-grow: 1;
  background: rgb(255, 255, 255,0.8);
} */

.slide-image{
  height: 300rpx;
  width: 450rpx;
  border-radius: 10rpx;
  margin: 0rpx 50rpx ;
  z-index: 1;
  box-shadow: 10rpx 5px 40rpx rgba(0, 0, 0,0.5);
}
.active{
  transform: scale(1.3);
  transition: all .5s ease-in 0s;
  z-index: 20;
}
.common{
  transform: scale(1);
  transition: all .5s ease-in 0s;
  z-index: 0;
}
</style>
<config>
{
    navigationBarTitleText: '精图打卡',
    usingComponents: {
      panel: '~@/components/panel',
      counter: '~counter',
      list: '../components/list',
      group: '../components/group',
      "slide-view": "module:miniprogram-slide-view",
      modal: "../components/modal",
      "my-swiper": "../components/common/Swiper"
    }
}
</config>
