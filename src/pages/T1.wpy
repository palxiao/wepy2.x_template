<template>
  <div v-if="done">
    <my-menu is="head" @action="menuAction"></my-menu>

    <div v-show="!showEditModal" class="content">
      <canvas canvas-id="{{canvasId}}" style="width: {{width*ratio*scale}}px; height: {{height*scale}}px;">

        <cover-view v-show="showEdit" style="{{'width:100%;height:'+height+'px;'}}" class="maskPanel">
          <!-- 蒙版 Start -->
          <cover-view @tap="edit('title')" style="{{'width:'+74+'px;height:'+40+'px;top: '+height*0.55+'px;left: '+34*ratio+'px;'}}"
            class="edit-title"></cover-view>
          <cover-view @tap="edit('desc')" style="{{'width:'+267*ratio+'px;height:'+50+'px;top: '+height*0.63+'px;left: '+34*ratio+'px;'}}"
            class="edit-title"></cover-view>
          <cover-view @tap="edit('note')" style="{{'width:'+140*ratio+'px;height:'+18+'px;top: '+height*0.837+'px;left: '+34*ratio+'px;'}}"
            class="edit-title"></cover-view>
          <!-- 蒙版 End -->
        </cover-view>

      </canvas>
    </div>

    <my-menu v-if="audit" is="foot" :showModal="showEditModal" :text="editText" @modalReturn="editModalChange" @action="menuAction"></my-menu>

  </div>
</template>
 
<script>
import wepy from '@wepy/core'
import store from '@/store'
import editMixin from '@/mixins/edit'
import api from '@/api'
import SimpleCanvas from '@/utils/plugins/canvasTool'

wepy.page({
  store,

  // hooks: {
  //   // Page 级别 hook, 只对当前 Page 的 setData 生效。
  // },
  mixins: [editMixin],
  data: {
    editImg: 'main',
    pre: 'cloud://daka.6461-daka-1301019118/T-01-01.png',
    bgImg: 'cloud://daka.6461-daka-1301019118/T-01-00.png',
    yinhao: 'cloud://daka.6461-daka-1301019118/T-01-02.png',
    main: 'cloud://daka.6461-daka-1301019118/T-01-04.png',
    xuxian: 'cloud://daka.6461-daka-1301019118/T-01-03.png',

    bg_width_original: 0,
    bg_height_original: 0,
    pre_width: 0,
    pre_height: 0,
    yinhao_width: 0,
    yinhao_height: 0,
    main_width: 0,
    main_height: 0,
    xuxian_width: 0,
    xuxian_height: 0,

    title: `人生`,
    desc: '人生就像一盒巧克力，|你永远不知道，|下一块会是什么味道。',
    note: '宜：珍惜 / 忌：浪费'
  },

  async created() {
    await this.init()
    this.draw(() => {
      this.done = true
    })
  },

  computed: {},

  methods: {
    async draw(cb) {
      wx.showLoading({ title: '努力加载中..' })
      const _this = this

      await this.prepareImg()

      if (this.bg_width_original === 0) {
        const bgImg = await this.downloadCloud(this.bgImg)
        this.bgImg = bgImg.path
        this.bg_width_original = bgImg.width
        this.bg_height_original = bgImg.height
        this.height = parseInt((bgImg.height * this.wWidth) / bgImg.width)
      }

      if (this.pre_width === 0) {
        const preImg = await this.downloadCloud(this.pre)
        this.pre = preImg.path
        this.pre_width = (preImg.width * this.wWidth) / this.bg_width_original
        this.pre_height = parseInt(
          (preImg.height * this.pre_width) / preImg.width
        )
      }

      await this.generalLoadImg('yinhao')
      await this.generalLoadImg('main')
      await this.generalLoadImg('xuxian')

      const canvas = new SimpleCanvas({
        scale: this.scale,
        canvasId: this.canvasId
      })
      canvas
        .createArtboard({
          id: 'share',
          backgroundColor: '#ffffff',
          width: this.width * this.ratio,
          height: this.height
        })

        .drawWrapText({
          id: 'start',
          text: ' ',
          fontSize: 0,
          top: 0
        })
        .drawImage({
          id: 'bg',
          width: 375 * this.ratio + 2,
          height: this.height,
          path: this.bgImg,
          referLayer: {
            id: 'start',
            top: 0
          }
        })
        .drawImage({
          id: 'preBox',
          left: 13 * this.ratio,
          width: this.pre_width,
          height: this.pre_height,
          path: this.pre,
          referLayer: {
            id: 'bg',
            top: -(this.pre_height + 102 * this.ratio)
          }
        })
        .drawImage({
          id: 'main',
          path: this.main,
          width: (this.main_width / 2) * this.ratio,
          height: (this.main_height / 2) * this.ratio,
          left: 48 * this.ratio,
          referLayer: {
            id: 'preBox',
            top: -this.pre_height + 78 * this.ratio
          }
        })
        .drawImage({
          id: 'xuxian',
          path: this.xuxian,
          width: (this.xuxian_width / 2) * this.ratio,
          height: (this.xuxian_height / 2) * this.ratio,
          left: 50 * this.ratio,
          referLayer: {
            id: 'preBox',
            top: -165 * this.ratio
          }
        })
        .drawCircleImage({
          id: 'avatar',
          path: this.avatarUrl,
          left: 50 * this.ratio,
          d: 50,
          top: 44 * this.ratio
          // referLayer: {
          //   id: 'bg',
          //   top: 280
          // }
        })
        .drawWrapText({
          id: '#nickname',
          fontSize: 18,
          top: 56 * this.ratio,
          text: this.nickName,
          referLayer: {
            id: 'avatar',
            left: 16 * this.ratio
          }
        })
        .drawImage({
          id: 'yinhao',
          width: (this.yinhao_width / 2) * this.ratio,
          height: (this.yinhao_height / 2) * this.ratio,
          path: this.yinhao,
          left: 280 * this.ratio,
          referLayer: {
            id: '#nickname',
            top: -20
          }
        })
        .drawWrapText({
          id: '#title',
          fontSize: 32,
          left: 50 * this.ratio,
          text: this.title,
          referLayer: {
            id: 'bg',
            top: -(256 * this.ratio)
          }
        })
        .drawWrapText({
          id: '#beitai',
          fontSize: 14,
          text: '每/日/一/签',
          left: 250 * this.ratio,
          referLayer: {
            id: '#title',
            top: -16
          }
        })
        .drawWrapText({
          id: '#contect',
          fontSize: 14,
          lineHeight: 6,
          left: 50 * this.ratio,
          width: 230 * this.ratio,
          text: this.desc,
          referLayer: {
            id: 'bg',
            top: -(200 * this.ratio)
          }
        })
        .drawWrapText({
          id: '#year',
          text: this.year,
          fontSize: 24,
          left: 42 * this.ratio,
          referLayer: {
            id: 'bg',
            top: -(78 * this.ratio)
          }
        })
        .drawWrapText({
          id: '#note',
          text: this.note,
          fontSize: 14,
          left: 42 * this.ratio,
          referLayer: {
            id: '#year',
            top: 10 * this.ratio
          }
        })
        .drawWrapText({
          id: '#month',
          text: '.' + this.month,
          fontSize: 24,
          left: 24 * this.ratio * 3 + 31 * this.ratio,
          referLayer: {
            id: 'bg',
            top: -(78 * this.ratio)
          }
        })
        .drawWrapText({
          id: '#day',
          text: '.' + this.date,
          fontSize: 24,
          left: 24 * this.ratio * 4 + 44 * this.ratio,
          referLayer: {
            id: 'bg',
            top: -(78 * this.ratio)
          }
        })
        .drawImage({
          id: 'qrcode',
          width: 86 * this.ratio,
          height: 86 * this.ratio,
          left: 260 * this.ratio,
          path: this.qrcode01,
          referLayer: {
            id: 'preBox',
            top: 2 * this.ratio
          }
        })

      if (cb) cb()
      canvas.draw(() => {
        setTimeout(() => {
          this.createPic(this)
        }, 10)
      })
    },
    // 设置随机文字出现位置
    randomText() {
      api.hitokoto().then(res => {
        this.desc = res.hitokoto
        this.draw()
      })
    }
  },
  events: {}
})
</script>
 
<style lang='less' scoped>
@import url('~@/assets/styles/edit.less');
.maskPanel {
  background: rgba(0, 0, 0, 0.24);
  position: absolute;
  width: 100%;
  top: 0;
  z-index: 99;
  .edit-title {
    background: rgba(255, 255, 255, 0.3);
    position: absolute;
    border: 2rpx dashed rgba(255, 255, 255, 1);
  }
}
</style>
<config>
{
navigationBarTitleText: '查看图签',
  usingComponents: {
    "my-menu": "../components/EditorMenu",
  }
}
</config>