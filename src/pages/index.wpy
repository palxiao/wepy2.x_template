
<wxs module="m1" lang="babel" src="../utils/widget/test.wxs"></wxs>
<template>
  <div class="container">

    <!-- <button class="head" open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="onGotUserInfo">
      <div class="userinfo">
        <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover" />
        <div class="userinfo-nickname">{{ userInfo.nickName }}</div>
      </div>
    </button> -->

    <!-- <my-swiper @tap="openEditor" @change="swiperChange" :imgUrls="imgUrls" /> -->
    <image mode="aspectFill" class="bg" style="min-height:{{wHeight}}px" src="../assets/images/bg00.png" />
    <image @tap="add" mode="aspectFit" class="title" src="../assets/images/title.png" />
    <div class="add">Ê∑ªÂä†ÁõÆÊ†á</div>
    <image class="bottom-image" mode="aspectFit" src="../assets/images/bg02.png" />

    <scroll-view scroll-y="true" class="content" style="height:{{wHeight*0.68}}px;">
      <!-- bindscrolltoupper="upper" bindscrolltolower="lower" bindscroll="scroll" scroll-into-view="{{toView}}" scroll-top="{{scrollTop}}" -->
      <!-- <checkbox-group bindchange="checkboxChange"> -->
        <div class="checkbox" v-for="(item,index) in items" :key="index">
          <checkbox @tap="checkboxSelect(index)" :value="item.value" :checked="item.checked" />
          <input v-show="item.edit" class="weui-input" placeholder="Â∞Ü‰ºöËé∑ÂèñÁÑ¶ÁÇπ"/>
          <text @tap="edit(index)" class="{{item.checked?'del':''}}" style="margin-left: 10rpx;">{{item.value}}</text>
        </div>
      <!-- </checkbox-group> -->
    </scroll-view>

    <!-- <official-account style="margin-top:40rpx;"></official-account> -->

  </div>
</template>

<script>
import wepy from '@wepy/core'
import eventHub from '../utils/common/eventHub'
// import { mapState, mapActions } from '@wepy/x';
import store from '@/store'
// import testMixin from '../mixins/test';
import api from '@/api'
const system = wx.getSystemInfoSync()

wepy.page({
  store,

  hooks: {
    // Page Á∫ßÂà´ hook, Âè™ÂØπÂΩìÂâç Page ÁöÑ setData ÁîüÊïà„ÄÇ
  },

  // mixins: [testMixin],

  data: {
    wHeight: system.windowHeight,
    userInfo: {
      nickName: 'ËØ∑ÁôªÂΩï'
    },
    items: [
      { name: 'USA', value: 'ÂêåÊ†∑‰∫§ÈÄöÊã•Â†µ', checked: false, edit: 0 },
      { name: 'CHN', value: 'ÊåÅÁª≠ÊåÅÁª≠ËÆ∏ÊòåÂéø', checked: 'true' },
      { name: 'BRA', value: 'ÈòøÊñØÈ°øÊííÂ§ßÊâÄ', checked: 0 },
      { name: 'USA', value: '‰ΩÜÊòØÈ´òiÊâ©Â§ßÂ∏àÂÇÖ', checked: false },
      { name: 'CHN', value: 'Ê∂®ÂπÖËææÂêéÊîæÁîµÈ•≠ÈîÖ', checked: 'true' },
      { name: 'BRA', value: 'ÁöÆÂç°ÂâßÊú∫ÁÆ±ÂÜÖÊâæÂÆ¢Êà∑', checked: 0 },
      { name: 'BRA', value: 'ÁÅ∞Ëâ≤Á©∫Èó¥ÂÇ≤ÈæôÂ≤õ', checked: 0 },
    ]
  },

  created() {
    // api.test().then((res) => {
    //   console.log(res);
    // })

    this.getUser()
  },

  computed: {},

  methods: {
    add() {},
    checkboxChange(e) {
      // console.log('checkboxÂèëÁîüchange‰∫ã‰ª∂ÔºåÊê∫Â∏¶valueÂÄº‰∏∫Ôºö', e.$wx.detail.value)
    },
    checkboxSelect(index) {
      this.items[index].checked = !this.items[index].checked
    },
    edit(index) {
      this.items[index].edit = 111
    },
    // ...mapActions(['']) ,
    getUser() {
      const _this = this
      wx.getUserInfo({
        success(res) {
          _this.userInfo = res.userInfo
          _this.$app.$options.globalData.userInfo = res.userInfo
        }
      })
    },
    onGotUserInfo: e => {},
    authorize() {
      wx.navigateTo({
        url: 'authorization' // ÊéàÊùÉ
      })
    }
  },
  events: {}
})
</script>
<style lang="less">
@import url('../assets/styles/index.less');
.title {
  position: absolute;
  height: 306rpx;
  width: 100%;
}
.bg {
  position: absolute;
  width: 100%;
  opacity: 0.6;
}
.bottom-image {
  position: absolute;
  bottom: 0;
  height: 270rpx;
  width: 278rpx;
  left: 230rpx;
  opacity: 0.8;
}
.content {
  position: absolute;
  top: 325rpx;
  margin-left: 20rpx;
  .checkbox {
    width: 654rpx;
    display: block;
    padding: 18rpx 70rpx 18rpx 50rpx;
  }
  .del {
    text-decoration: line-through;
    color: rgba(0, 0, 0, 0.4);
  }
}
.add {
  position: absolute;
  left: 200rpx;
  top: 200rpx;
  color: rgba(0, 0, 0, 0.7);
}
</style>
<config>
{
    navigationBarTitleText: 'üê∏',
    usingComponents: {
      "my-swiper": "~@/components/common/Swiper",
    }
}
</config>
