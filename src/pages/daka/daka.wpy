<template>
    <scroll-view scroll-y class="DrawerPage {{modalName=='viewModal'?'show':''}}">
        <view @tap="showModal('viewModal')" class="bg-gradual-blue padding radius text-center shadow-blur daka-f-btn">
            <view class="text">打卡</view>
        </view>
    </scroll-view>
    <view class="DrawerClose {{modalName=='viewModal'?'show':''}}" bindtap="hideModal">
        <text class="cuIcon-pullright"></text>
    </view>

    <scroll-view scroll-y class="DrawerWindow {{modalName=='viewModal'||modalName=='bottomModal'?'show':''}}">
        <view class="cu-list menu card-menu margin-top-xl margin-bottom-xl shadow-lg">
            <!-- 打卡界面 -->
            <view class="padding text-center">
                <view class="padding-lr bg-white">
                    <view class="solid-bottom padding">Hello frog clock punch 🐸</view>
                    <view v-show="!isLogin" class="padding">登录青蛙打卡继续操作</view>
                    <view v-show="isLogin" @tap="start()" class="margin radius bg-gradual-blue shadow-blur daka_start animation-{{animation}}">
                        <text class="daka_text line-clamp-1">{{statusText||'Click Start'}}</text>
                        <image v-show="statusText" src="/static/images/wave.gif" mode="aspectFill" class="gif-black response" style="height:100%;"></image>
                    </view>
                </view>
            </view>
            <!-- 标签选择 -->
            <m-label v-if="isLogin" :show="modalName=='bottomModal'" @choose="load()" @close="showModal('viewModal')" />

            <!-- 登录界面 -->
            <m-login v-if="!isLogin" @done="isLogin=true;load();" />

        </view>
        <!-- 打卡记录列表 -->
        <m-record />

    </scroll-view>

    <!-- 结束任务 -->
    <m-confirm :data="current" :show="modalName=='EndModal'" @done="done" @close="showModal('viewModal')" />

</template>
 
<script>
import wepy from '@wepy/core';
// import eventHub from '@/utils/common/eventHub';
import store from '@/store';
// import testMixin from '@/mixins/test';
import api from '@/api'
import { vibrate } from '@/common/utils'


wepy.page({
    store,

    hooks: {
        // Page 级别 hook, 只对当前 Page 的 setData 生效。
    },
    //   mixins: [testMixin],
    data: {
        modalName: null,
        animation: '',
        isLogin: wx.getStorageSync('token') || null,
        statusText: '',
        current: {}
    },

    onShow () {
        this.load()
    },

    computed: {

    },

    methods: {
        async load () {
            if (!this.isLogin) { return }
            const { result } = await api.getRecord()
            if (!result.after_time) {
                this.statusText = result.event_name
                this.current = result
            } else { this.statusText = '' }
        },
        showModal (e) {
            vibrate()
            this.modalName = e
        },
        hideModal (e) {
            this.modalName = null
        },
        start () {
            vibrate()
            this.animation = 'shake'
            this.modalName = this.statusText ? 'EndModal' : 'bottomModal'
            if (this.modalName === 'bottomModal') {
                wx.requestSubscribeMessage({
                    tmplIds: ['PlBadng7ysQ69eeB28QnTYQCxHWdDtE_IKYkwMoWw68', 'D2pHbPhfLo74vomL8240r16yXVbKsZXjJsFYq2FBorM'],
                })
            }
            setTimeout(() => {
                this.animation = ''
            }, 800);
        },
        done () {
            this.hideModal()
            this.statusText = ''
        }
    },
    events: {},
});
</script>
 
<style lang='less' scoped>
@import url('./DrawerPage.less');
.daka-f-btn {
  border-radius: 50%;
  width: 120rpx;
  height: 120rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  bottom: 40rpx;
  left: 40rpx;
  .text {
    font-size: 27rpx;
  }
}
.daka_start {
  position: relative;
  display: inline-block;
  border-radius: 50%;
  overflow: hidden;
  width: 200rpx;
  height: 200rpx;
  .daka_text {
    position: absolute;
    width: 100%;
    text-align: center;
    line-height: 200rpx;
  }
}
</style>
<config>
{
navigationBarTitleText: '',
    usingComponents: {
        "m-label": "./components/Label",
        "m-login": "./components/Login",
        "m-confirm": "./components/Confirm",
        "m-record": "./components/Record"
    }
}
</config>
